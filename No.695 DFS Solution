class Solution(object):
    def maxAreaOfIsland(self, grid):
        """
        :type grid: List[List[int]]
        :rtype: int
        """
        if not grid:
            return 0
        m, n = len(grid), len(grid[0])
        visited_point = set()
        
        def dfs(r,c):
            if (r<0 or r>=m or c<0 or c>=n or grid[r][c] == 0 or (r,c) in visited_point):
                return 0
            visited_point.add((r,c))
            area = 1
            area += dfs(r-1, c)
            area += dfs(r+1, c)
            area += dfs(r, c-1)
            area += dfs(r, c+1)
            return area

        max_area = 0
        for i in range(m):
            for j in range(n):
                if grid[i][j] == 1 and (i,j) not in visited_point:
                   max_area = max(max_area, dfs(i,j))
                   
        return max_area
